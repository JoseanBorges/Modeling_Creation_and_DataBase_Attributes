--######### CONSULTAS ###########

-- 1 Selecionar a quantidate total de estudantes cadastrados no banco

NOME DA VIEW = TOTAL_ALUNO

	CREATE VIEW TOTAL_ALUNO AS SELECT COUNT(*) AS quantidade_total_estudantes
	FROM estudante;


-- 2 Selecionar quais pessoas facilitadoras atuam em mais de uma turma;

NOME DA VIEW = FACILITADOR_COM_VARIAS_TURMA


	SELECT pf.id_facilitador, pf.nome
	FROM pessoa_facilitadora pf
	JOIN turma t ON pf.id_facilitador = t.id_facilitador
	GROUP BY pf.id_facilitador, pf.nome
	HAVING COUNT(DISTINCT t.id_turma) > 1;

-- 3 Crie uma view que selecione a porcentagem de estudantes com status de evasão agrupados por
turma;

NOME DA VIEW = PORC_EVASAO

	CREATE VIEW PORC_EVASAO AS
SELECT t.id_turma, t.nome AS nome_turma, COUNT(*) AS total_estudantes,
    COUNT(CASE WHEN e.status = 'desistente' THEN 1 END) AS total_evasao,
    (COUNT(CASE WHEN e.status = 'desistente' THEN 1 END) / COUNT(*)::float) * 100 AS percentagem_evasao
FROM turma t
JOIN estudante e ON t.id_turma = e.id_turma
GROUP BY t.id_turma, t.nome;


-- 4 Crie um trigger para ser disparado quando o atributo status de um estudante for atualizado e
inserir um novo dado em uma tabela de log.
	--Foi criada uma tabela com o nome estudante_auditoria para armazenar os log

-- 5 pergunta extra  qual o nome da turma, nome do facilitador e total de alunos ativos na turma 


	CREATE VIEW TURMA_FACILITADOR_ALUNO AS
WITH facilitador_alunos_ativos AS (
    	SELECT pf.nome AS nome_facilitador, t.nome AS nome_turma, COUNT(*) AS total_alunos_ativos,
           	ROW_NUMBER() OVER (PARTITION BY t.id_turma ORDER BY COUNT(*) DESC) AS rank
    	FROM pessoa_facilitadora pf
    	JOIN turma t ON pf.id_facilitador = t.id_facilitador
    	JOIN turma_aluno ta ON t.id_turma = ta.id_turma
    	JOIN estudante e ON ta.id_estudante = e.id_estudante
    	WHERE e.status = 'ativo'
    	GROUP BY pf.id_facilitador, t.id_turma
	)
	SELECT nome_turma, nome_facilitador, total_alunos_ativos
	FROM facilitador_alunos_ativos
	WHERE rank = 1;






####################### MAPA DAS VIEW #############################

CREATE VIEW TOTAL_ALUNO AS SELECT COUNT(*) AS quantidade_total_estudantes
	FROM estudante;
	
CREATE VIEW FACILITADOR_COM_VARIAS_TURMA AS
	SELECT pf.id_facilitador, pf.nome
	FROM pessoa_facilitadora pf
	JOIN turma t ON pf.id_facilitador = t.id_facilitador
	GROUP BY pf.id_facilitador, pf.nome
	HAVING COUNT(DISTINCT t.id_turma) > 1;
	
CREATE VIEW PORC_EVASAO AS
SELECT t.id_turma, t.nome AS nome_turma, COUNT(*) AS total_estudantes,
    COUNT(CASE WHEN e.status = 'desistente' THEN 1 END) AS total_evasao,
    (COUNT(CASE WHEN e.status = 'desistente' THEN 1 END) / COUNT(*)::float) * 100 AS percentagem_evasao
FROM turma t
JOIN estudante e ON t.id_turma = e.id_turma
GROUP BY t.id_turma, t.nome;

CREATE VIEW TURMA_FACILITADOR_ALUNO AS
WITH facilitador_alunos_ativos AS (
    	SELECT pf.nome AS nome_facilitador, t.nome AS nome_turma, COUNT(*) AS total_alunos_ativos,
           	ROW_NUMBER() OVER (PARTITION BY t.id_turma ORDER BY COUNT(*) DESC) AS rank
    	FROM pessoa_facilitadora pf
    	JOIN turma t ON pf.id_facilitador = t.id_facilitador
    	JOIN turma_aluno ta ON t.id_turma = ta.id_turma
    	JOIN estudante e ON ta.id_estudante = e.id_estudante
    	WHERE e.status = 'ativo'
    	GROUP BY pf.id_facilitador, t.id_turma
	)
	SELECT nome_turma, nome_facilitador, total_alunos_ativos
	FROM facilitador_alunos_ativos
	WHERE rank = 1;


--VISUALIZAÇÃO DOS DADOS COM VIEWS

	--1. Selecionar a quantidade total de estudantes cadastrados no banco;
	SELECT * FROM TOTAL_ALUNO

	--2. Selecionar quais pessoas facilitadoras atuam em mais de uma turma;
	SELECT * FROM FACILITADOR_COM_VARIAS_TURMA

	--3. Crie uma view que selecione a porcentagem de estudantes com status de evasão agrupados por turma;
	SELECT * FROM PORC_EVASAO
	
	-- 4. Além disso, vocês deverão pensar em mais uma questão que deverá ser respondida por scripts SQL que combine pelo menos 3 tabelas. 
	
	SELECT * FROM TURMA_FACILITADOR_ALUNO
